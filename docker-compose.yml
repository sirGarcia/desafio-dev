# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)
version: '3.7'
 
# Define services
services:
  app-server:
    build:
      context: desafio-backend 
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - db .
    environment: 
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false",
        "spring.datasource.username" : "$MYSQLDB_USER",
        "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
      }'
    networks:
      - backend
      - frontend
 
  app-client:
    build:
      context: angular-11-social-login
      dockerfile: Dockerfile
      args:
        API_BASE_URL: http://127.0.0.1:8080/
    ports:
      - "8081:80"
    restart: always
    depends_on:
      - app-server
    networks:
      - frontend  
 
  db:
    image: mysql:5.7.28
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD="$MYSQLDB_ROOT_PASSWORD"
      - MYSQL_DATABASE=database
      - MYSQL_USER="$MYSQLDB_USER"
      - MYSQL_PASSWORD=password
    volumes:
      - mysql_data:/var/lib/mysql 
   
networks:
  backend:
  frontend: 